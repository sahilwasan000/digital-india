{"version":3,"sources":["logo.svg","Sign.PNG","Login.PNG","Component/LogSignoption.js","actions/index.js","Component/SignUpForm.js","Component/LoginForm.js","Component/FormManager.js","Component/LoginSignin.js","Component/Home.js","Component/EnterAdhar.js","App.js","serviceWorker.js","Reducers/index.js","index.js"],"names":["module","exports","LoginSigninOption","id","onClick","props","LogIn","SignUp","React","Component","connect","dispatch","type","SignUpForm","class","method","for","name","placeholder","href","value","className","src","require","LoginForm","FormManager","console","log","this","LogSign","state","login","LoginSignin","Home","EnterAdhar","autoComplete","App","path","exact","component","Boolean","window","location","hostname","match","combineReducers","action","newState","store","createStore","reducers","applyMiddleware","getState","next","returnValue","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.488b1119.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sign.33fc842e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Login.9377ba6a.PNG\";","import React from 'react';\r\nimport'../Login.css';\r\nimport {connect} from 'react-redux';\r\nimport {SignUp,Login} from '../actions'\r\nclass LoginSigninOption extends React.Component{\r\n    render(){\r\n        return (\r\n            \r\n                <div id=\"login-main\">\r\n                    <div id=\"login\" onClick={ ()=>this.props.LogIn() }>Login</div>\r\n                    <div id=\"signUpbtn\" onClick={ ()=>this.props.SignUp() }>SignUp</div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return {\r\n        SignUp:()=>dispatch( SignUp() ),\r\n        LogIn:()=>dispatch( Login())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(LoginSigninOption);","export const SignUp=()=>{\r\n    return {\r\n        type:\"SignInForm\"\r\n    };\r\n};\r\nexport const Login=()=>{\r\n    return {\r\n        type:\"LoginForm\"\r\n    };\r\n};","import React from 'react'\r\nimport'../Login.css'\r\nclass SignUpForm extends React.Component{\r\n    render(){\r\n        return (\r\n            <section class=\"signup\">\r\n            <div class=\"container\">\r\n                <div class=\"signup-content\">\r\n                    <div class=\"signup-form\">\r\n                        <h2 class=\"form-title\">Sign up</h2>\r\n                        <form method=\"/register\" class=\"register-form\" id=\"register-form\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\r\n                                <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Your Name\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"email\"><i class=\"zmdi zmdi-email\"></i></label>\r\n                                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your Email\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"pass\"><i class=\"zmdi zmdi-lock\"></i></label>\r\n                                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"re-pass\"><i class=\"zmdi zmdi-lock-outline\"></i></label>\r\n                                <input type=\"password\" name=\"password2\" id=\"password2\" placeholder=\"Repeat your password\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"checkbox\" name=\"agree-term\" id=\"agree-term\" class=\"agree-term\" />\r\n                                <label for=\"agree-term\" class=\"label-agree-term\"><span><span></span></span>I agree all statements in  <a href=\"#\" class=\"term-service\">Terms of service</a></label>\r\n                            </div>\r\n                            <div class=\"form-group form-button\">\r\n                                <input type=\"submit\" name=\"signup\" id=\"signup\" class=\"form-submit\" value=\"Register\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div class=\"signup-image\">\r\n                        {/* <figure><img src=\"images/signup-image.jpg\" alt=\"sing up image\"></figure>\r\n                        <a href=\"#\" class=\"signup-image-link\">I am already member</a> */}\r\n                        <img className=\"sign-image\" src={require('../Sign.PNG')} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n        )\r\n    }\r\n}\r\nexport default SignUpForm;\r\n","import React from 'react'\r\nimport'../Login.css'\r\nclass LoginForm extends React.Component{\r\n    render(){\r\n        return (\r\n            <section class=\"sign-in logIn\">\r\n            <div class=\"container\">\r\n                <div class=\"signin-content\">\r\n                <div class=\"signin-image\">\r\n                        {/* <figure><img src=\"images/signin-image.jpg\" alt=\"sing up image\"></figure>\r\n                        <a href=\"#\" class=\"signup-image-link\">Create an account</a> */}\r\n                        <img className=\"sign-image\" src={require('../Login.PNG')} />\r\n                    </div>\r\n                    <div class=\"signin-form\">\r\n                        <h2 class=\"form-title\">Log in</h2>\r\n                        <form method=\"/login\" class=\"register-form\" id=\"login-form\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"your_name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\r\n                                <input type=\"text\" name=\"your_name\" id=\"your_name\" placeholder=\"Your Unique id\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"your_pass\"><i class=\"zmdi zmdi-lock\"></i></label>\r\n                                <input type=\"password\" name=\"your_pass\" id=\"your_pass\" placeholder=\"Password\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"checkbox\" name=\"remember-me\" id=\"remember-me\" class=\"agree-term\" />\r\n                                <label for=\"remember-me\" class=\"label-agree-term\"><span><span></span></span>Remember me</label>\r\n                            </div>\r\n                            <div class=\"form-group form-button\">\r\n                                <input type=\"submit\" name=\"signin\" id=\"signin\" class=\"form-submit qwe\" value=\"Log in\"/>\r\n                                <input type=\"submit\" name=\"signin\" id=\"signin\" class=\"form-submit\" value=\"Forgot Passwor\"/>\r\n                            </div>\r\n                        </form>\r\n                        <div class=\"social-login\">\r\n                            <span class=\"social-label\">Or login with</span>\r\n                            <ul class=\"socials\">\r\n                                <li><a href=\"#\"><i class=\"display-flex-center zmdi zmdi-facebook\"></i></a></li>\r\n                                <li><a href=\"#\"><i class=\"display-flex-center zmdi zmdi-twitter\"></i></a></li>\r\n                                <li><a href=\"#\"><i class=\"display-flex-center zmdi zmdi-google\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        )\r\n    }\r\n}\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SignUpForm from './SignUpForm'\r\nimport LoginForm from './LoginForm'\r\nclass FormManager extends React.Component{\r\n    render(){\r\n        console.log(this.props.LogSign)\r\n        if(this.props.LogIn){\r\n            return <LoginForm/>\r\n            \r\n        }\r\n        else{\r\n            return <SignUpForm/>\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        LogIn:state.login\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(FormManager)","import React from 'react';\r\nimport LogSignOption from './LogSignoption';\r\nimport FormManager from './FormManager'\r\nclass LoginSignin extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n               <LogSignOption />\r\n               <FormManager />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginSignin;","import React from 'react';\r\nimport LoginSignin from './LoginSignin'\r\nclass Home extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <LoginSignin />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from 'react'\r\nimport'../Aadhar.css'\r\nclass EnterAdhar extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2 className=\"aadhar\">Enter Your Aadhar Details!</h2>\r\n                </div>\r\n                <form method=\"POST\" class=\"register-form\" id=\"register-form\">\r\n                    <div id=\"Aadhar\">\r\n                            <div class=\"form-group\">\r\n                                <input className=\"abc\" autoComplete=\"off\" type=\"number\" name=\"name\" id=\"name\" placeholder=\"Your Aadhar Card Number\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input  className=\"abc\" type=\"date\" name=\"date\" id=\"date\" placeholder=\"Your Date Of Birth\"/>\r\n                            </div>\r\n                            <div class=\"form-group form-button def\">\r\n                                <input type=\"submit\" name=\"signup\" id=\"signup\" class=\"form-submit\" value=\"Submit\"/>\r\n                            </div>\r\n                    </div>\r\n                        </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EnterAdhar;","import React from 'react';\nimport logo from './logo.svg';\nimport Home from './Component/Home';\nimport {BrowserRouter, Route } from 'react-router-dom';\nimport EnterAdhar from './Component/EnterAdhar'\nclass App extends React.Component{\n  render(){\n    return (\n      <div>\n        <BrowserRouter>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Aadhar\" exact component={EnterAdhar} />\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux'\r\nconst logIn=false\r\n\r\nconst LogIn=(state=logIn,action)=>{\r\n    // const stat=state\r\n    // let newState=state\r\n    // if(action.type==='SignInForm'){\r\n    //    newState=Object.assign({}, stat, {logIn:false, SingUp:true})\r\n    // }\r\n    // if(action.type==='LoginForm'){\r\n    //     newState=Object.assign({}, stat, {logIn:true, SingUp:false})\r\n    // }\r\n    // return newState\r\n    let newState=state;\r\n    if(action.type==='SignInForm'){\r\n        newState=false\r\n    }\r\n    if(action.type==='LoginForm'){\r\n        newState=true;\r\n    }\r\n    return newState;\r\n}\r\n\r\nexport default combineReducers({\r\n    login:LogIn\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './Reducers'\nimport {Provider} from 'react-redux';\nimport {createStore ,applyMiddleware} from 'redux'\nconst store= createStore(reducers ,applyMiddleware(logger));\nfunction logger({ getState }) {\n  return next => action => {\n    console.log('will dispatch', action)\n    const returnValue = next(action)\n    console.log('state after dispatch', getState())\n    return returnValue\n  }\n}\nReactDOM.render(\n                    <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}